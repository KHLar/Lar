<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="admin">

	<!-- community result map -->
	<resultMap id="getselectCommuList" type="commu">
		<result property="commu_Index" column="COMMU_INDEX" />
		<result property="commu_Writer_Index" column="COMMU_WRITER_INDEX" />
		<result property="commu_Category_Index" column="COMMU_CATEGORY_INDEX" />
		<result property="commu_Title" column="COMMU_TITLE" />
		<result property="commu_Content" column="COMMU_CONTENT"
			jdbcType="CLOB" javaType="java.lang.String" />
		<result property="commu_Hits" column="COMMU_HITS" />
		<result property="commu_Upload_Date" column="COMMU_UPLOAD_DATE" />
		<result property="commu_Update_Date" column="COMMU_UPDATE_DATE" />
		<result property="commu_Is_Deleted" column="COMMU_IS_DELETED" />
		<result property="commu_tags" column="COMMU_TAGS" />
		<result property="fileCount" column="FILECOUNT" />
		<result property="commu_Writer" column="COMMU_WRITER" />
	</resultMap>
	<resultMap id="getselectCommuOne" type="commu">
		<result property="commu_Index" column="COMMU_INDEX" />
		<result property="commu_Writer_Index" column="COMMU_WRITER_INDEX" />
		<result property="commu_Category_Index" column="COMMU_CATEGORY_INDEX" />
		<result property="commu_Title" column="COMMU_TITLE" />
		<result property="commu_Content" column="COMMU_CONTENT"
			jdbcType="CLOB" javaType="java.lang.String" />
		<result property="commu_Hits" column="COMMU_HITS" />
		<result property="commu_Upload_Date" column="COMMU_UPLOAD_DATE" />
		<result property="commu_Update_Date" column="COMMU_UPDATE_DATE" />
		<result property="commu_tags" column="COMMU_TAGS" />
		<result property="commu_Is_Deleted" column="COMMU_IS_DELETED" />
		<result property="commu_Writer" column="COMMU_WRITER" />
	</resultMap>
	<resultMap id="getselectCommuReplyList" type="commuReply"> 
		<result property="commu_Reply_Index" column="COMMU_REPLY_INDEX" /> 
		<result property="commu_Reply_Commu_Index" column="COMMU_REPLY_COMMU_INDEX" /> 
		<result property="commu_Reply_Parent_Index" column="COMMU_REPLY_PARENT_INDEX" /> 
		<result property="commu_Reply_Writer_Index" column="COMMU_REPLY_WRITER_INDEX" /> 
		<result property="commu_Reply_Content" column="COMMU_REPLY_CONTENT" jdbcType="CLOB" javaType="java.lang.String" /> 
		<result property="commu_Reply_Upload_Date" column="COMMU_REPLY_UPLOAD_DATE" /> 
		<result property="commu_Reply_Update_Date" column="COMMU_REPLY_UPDATE_DATE" /> 
		<result property="commu_Reply_Depth_Index" column="COMMU_REPLY_DEPTH_INEDX" />
		<result property="commu_Reply_Is_Deleted" column="COMMU_REPLY_IS_DELETED" /> 
		<result property="commu_Reply_Is_Readed" column="COMMU_REPLY_IS_READED" />  
		<result property="commu_Reply_Order_Index" column="COMMU_REPLY_ORDER_INDEX" />  
	</resultMap>
	 
	<select id="selectList">
		select * from EXAMPLE order by INDEX desc
	</select>
	
	<select id="selectUser" parameterType="_int" resultType="user">
		select * from TABLE_USER where USER_INDEX = #{user_index}
	</select>
	
	<insert id="insert" >
		insert into EXAMPLE 
		values(SEQ_EXAMPLE.NEXTVAL, #{val1}, #{val2})
	</insert>
	
	<update id="update">
		update EXAMPLE
		set VAL1 = #{val1}, VAL2 = #{val2}
		where INDEX = #{index}
	</update>
	
	<delete id="delete" parameterType="_int">
		delete from EXAMPLE where INDEX = #{index}
	</delete>
	
	<select id="selectUserList" parameterType="_int" resultType="user">
		select * from TABLE_USER
		where USER_LEVEL <![CDATA[<]]> #{user_level} and
			(USER_TYPE like '%'||'user'||'%' OR 
			USER_TYPE like '%'||'inst'||'%') 
		order by USER_LEVEL DESC, USER_INDEX DESC
	</select>
	
	<select id="selectUserCount" parameterType="_int" resultType="_int">
		select COUNT(*) from TABLE_USER
		where USER_LEVEL <![CDATA[<]]> #{user_level} and
			(USER_TYPE like '%'||'user'||'%' OR 
			USER_TYPE like '%'||'inst'||'%') 
	</select>
	
	<update id="modifyUserByAdmin" parameterType="user">
		update TABLE_USER
		<set>
			<if test="user_nickname != null">USER_NICKNAME = #{user_nickname},</if>
			<if test="user_phone != null">USER_PHONE = #{user_phone},</if>
			USER_IS_SECESSION = #{user_is_secession},
			USER_IS_KICKED = #{user_is_kicked},
			<if test="user_try_signin_count gte 0">USER_TRY_SIGNIN_COUNT = #{user_try_signin_count},</if>
		</set>
		where USER_INDEX = #{user_index} and USER_ID = #{user_id}
	</update>
	
	<select id="selectCommuListByUserIndex" parameterType="_int" resultMap="getselectCommuList">
		select
		COMMU_INDEX,COMMU_WRITER_INDEX,COMMU_CATEGORY_INDEX,COMMU_TITLE,COMMU_CONTENT,COMMU_HITS,COMMU_UPLOAD_DATE,COMMU_UPDATE_DATE,COMMU_IS_DELETED,USER_NICKNAME
		COMMU_WRITER, COMMU_TAGS
		from TABLE_USER U join TABLE_COMMU C on(C.COMMU_WRITER_INDEX=U.USER_INDEX)
		where U.USER_INDEX = #{user_index}
		order by C.COMMU_UPLOAD_DATE DESC
	</select>
	
	
	<!-- community area -->
	
	<select id="selectCommuNoticeList" parameterType="string" resultMap="getselectCommuList">
		select
		COMMU_INDEX,COMMU_WRITER_INDEX,COMMU_CATEGORY_INDEX,COMMU_TITLE,COMMU_CONTENT,COMMU_HITS,COMMU_UPLOAD_DATE,COMMU_UPDATE_DATE,COMMU_IS_DELETED,USER_NICKNAME
		COMMU_WRITER, COMMU_TAGS
		from TABLE_USER U join TABLE_COMMU C on(C.COMMU_WRITER_INDEX=U.USER_INDEX)
		where C.COMMU_IS_DELETED = 0 and C.COMMU_CATEGORY_INDEX = 'N01'
	</select>
	
	<select id="selectCommuNoticeListCount" resultType="_int">
		select COUNT(*) from TABLE_COMMU
		where COMMU_IS_DELETED = 0 and COMMU_CATEGORY_INDEX = 'N01'
	</select>
	
	<select id="selectCommuBoardList" parameterType="string" resultMap="getselectCommuList">
		select
		COMMU_INDEX,COMMU_WRITER_INDEX,COMMU_CATEGORY_INDEX,COMMU_TITLE,COMMU_CONTENT,COMMU_HITS,COMMU_UPLOAD_DATE,COMMU_UPDATE_DATE,COMMU_IS_DELETED,USER_NICKNAME
		COMMU_WRITER, COMMU_TAGS
		from TABLE_USER U join TABLE_COMMU C on(C.COMMU_WRITER_INDEX=U.USER_INDEX)
		where C.COMMU_IS_DELETED = 0 and C.COMMU_CATEGORY_INDEX = 'B04'
	</select>
	
	<select id="selectCommuBoardListCount" resultType="_int">
		select COUNT(*) from TABLE_COMMU
		where COMMU_IS_DELETED = 0 and COMMU_CATEGORY_INDEX = 'B04'
	</select>
	
	<select id="selectCommuQaList" parameterType="string" resultMap="getselectCommuList">
		select
		COMMU_INDEX,COMMU_WRITER_INDEX,COMMU_CATEGORY_INDEX,COMMU_TITLE,COMMU_CONTENT,COMMU_HITS,COMMU_UPLOAD_DATE,COMMU_UPDATE_DATE,COMMU_IS_DELETED,USER_NICKNAME
		COMMU_WRITER, COMMU_TAGS
		from TABLE_USER U join TABLE_COMMU C on(C.COMMU_WRITER_INDEX=U.USER_INDEX)
		where C.COMMU_IS_DELETED = 0 and C.COMMU_CATEGORY_INDEX = 'B02'
	</select>
	
	<select id="selectCommuQaListCount" resultType="_int">
		select COUNT(*) from TABLE_COMMU
		where COMMU_IS_DELETED = 0 and COMMU_CATEGORY_INDEX = 'B02'
	</select>
	
	<select id="selectCommuNewsList" parameterType="string" resultMap="getselectCommuList">
		select
		COMMU_INDEX,COMMU_WRITER_INDEX,COMMU_CATEGORY_INDEX,COMMU_TITLE,COMMU_CONTENT,COMMU_HITS,COMMU_UPLOAD_DATE,COMMU_UPDATE_DATE,COMMU_IS_DELETED,USER_NICKNAME
		COMMU_WRITER, COMMU_TAGS
		from TABLE_USER U join TABLE_COMMU C on(C.COMMU_WRITER_INDEX=U.USER_INDEX)
		where C.COMMU_IS_DELETED = 0 and C.COMMU_CATEGORY_INDEX = 'B03'
	</select>
	
	<select id="selectCommuNewsListCount" resultType="_int">
		select COUNT(*) from TABLE_COMMU
		where COMMU_IS_DELETED = 0 and COMMU_CATEGORY_INDEX = 'B03'
	</select>
	
	<select id="selectCommuTrashList" resultMap="getselectCommuList">
		select
		COMMU_INDEX,COMMU_WRITER_INDEX,COMMU_CATEGORY_INDEX,COMMU_TITLE,COMMU_CONTENT,COMMU_HITS,COMMU_UPLOAD_DATE,COMMU_UPDATE_DATE,COMMU_IS_DELETED,USER_NICKNAME
		COMMU_WRITER, COMMU_TAGS
		from TABLE_USER U join TABLE_COMMU C on(C.COMMU_WRITER_INDEX=U.USER_INDEX)
		where C.COMMU_IS_DELETED = 1
	</select>
	
	<select id="selectCommuTrashListCount" resultType="_int">
		select COUNT(*) from TABLE_COMMU
		where COMMU_IS_DELETED = 1
	</select>
	
	<update id="commuTrashRestore" parameterType="_int">
		update TABLE_COMMU
		set COMMU_IS_DELETED = 0
		where COMMU_INDEX = #{commu_index}
	</update>
	
	<select id="searchCommuList" parameterType="map" resultMap="getselectCommuList">
		select
		COMMU_INDEX,COMMU_WRITER_INDEX,COMMU_CATEGORY_INDEX,COMMU_TITLE,COMMU_CONTENT,COMMU_HITS,COMMU_UPLOAD_DATE,COMMU_UPDATE_DATE,COMMU_IS_DELETED,USER_NICKNAME
		COMMU_WRITER, COMMU_TAGS
		from TABLE_USER U join TABLE_COMMU C on(C.COMMU_WRITER_INDEX=U.USER_INDEX)
		where C.COMMU_IS_DELETED = 
		<choose>
			<when test="category eq 'trash'">
				1
			</when>
			<otherwise>
				0
			</otherwise>
		</choose>
		AND
		<if test="filter eq 'title'">
			C.COMMU_TITLE like '%'||#{text}||'%'
		</if>
		<if test="filter eq 'content'">
			C.COMMU_CONTENT like '%'||#{text}||'%' 
		</if>
		<if test="filter eq 'tag'">
			C.COMMU_TAGS like '%'||#{text}||'%' 
		</if>
		
		<if test="category eq 'notice'">
			AND C.COMMU_CATEGORY_INDEX = 'N01'
		</if>
		<if test="category eq 'board'">
			AND C.COMMU_CATEGORY_INDEX = 'B04'
		</if>
		<if test="category eq 'qa'">
			AND C.COMMU_CATEGORY_INDEX = 'B02'
		</if>
		<if test="category eq 'news'">
			AND C.COMMU_CATEGORY_INDEX = 'B03'
		</if>
	</select>
	
	<select id="selectCommuByCommuIndex" parameterType="_int" resultMap="getselectCommuOne">
		select
		COMMU_INDEX,COMMU_WRITER_INDEX,COMMU_CATEGORY_INDEX,COMMU_TITLE,COMMU_CONTENT,COMMU_HITS,COMMU_UPLOAD_DATE,COMMU_UPDATE_DATE,COMMU_IS_DELETED,USER_NICKNAME
		COMMU_WRITER, COMMU_TAGS
		from TABLE_USER U join TABLE_COMMU C on(C.COMMU_WRITER_INDEX=U.USER_INDEX)
		where C.COMMU_INDEX=#{commuNo}
	</select>
	
	<select id="selectCommuReplyListByCommuIndex" resultMap="getselectCommuReplyList">
		select R.*,U.USER_NICKNAME COMMU_REPLY_WRITER from TABLE_COMMU_REPLY R join TABLE_USER U 
		on(R.COMMU_REPLY_WRITER_INDEX=U.USER_INDEX) where COMMU_REPLY_COMMU_INDEX=#{commu_index}
		order by COMMU_REPLY_PARENT_INDEX DESC, commu_Reply_Order_Index ASC
	</select>
	
	<select id="paymentList" parameterType="_int" resultType="purchase">
		SELECT * FROM TABLE_PURCHASE LEFT JOIN TABLE_COUPON ON(PURCHASE_USED_COUPON_INDEX = COUPON_INDEX) WHERE PURCHASE_USER_INDEX = #{user_index}
	</select>
	
</mapper>